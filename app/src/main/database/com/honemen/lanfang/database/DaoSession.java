package com.honemen.lanfang.database;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.honemen.lanfang.database.HttpRetryRequest;
import com.honemen.lanfang.database.HttpRetryPostParam;
import com.honemen.lanfang.database.HttpRetryGetParam;
import com.honemen.lanfang.database.AppCache;

import com.honemen.lanfang.database.HttpRetryRequestDao;
import com.honemen.lanfang.database.HttpRetryPostParamDao;
import com.honemen.lanfang.database.HttpRetryGetParamDao;
import com.honemen.lanfang.database.AppCacheDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig httpRetryRequestDaoConfig;
    private final DaoConfig httpRetryPostParamDaoConfig;
    private final DaoConfig httpRetryGetParamDaoConfig;
    private final DaoConfig appCacheDaoConfig;

    private final HttpRetryRequestDao httpRetryRequestDao;
    private final HttpRetryPostParamDao httpRetryPostParamDao;
    private final HttpRetryGetParamDao httpRetryGetParamDao;
    private final AppCacheDao appCacheDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        httpRetryRequestDaoConfig = daoConfigMap.get(HttpRetryRequestDao.class).clone();
        httpRetryRequestDaoConfig.initIdentityScope(type);

        httpRetryPostParamDaoConfig = daoConfigMap.get(HttpRetryPostParamDao.class).clone();
        httpRetryPostParamDaoConfig.initIdentityScope(type);

        httpRetryGetParamDaoConfig = daoConfigMap.get(HttpRetryGetParamDao.class).clone();
        httpRetryGetParamDaoConfig.initIdentityScope(type);

        appCacheDaoConfig = daoConfigMap.get(AppCacheDao.class).clone();
        appCacheDaoConfig.initIdentityScope(type);

        httpRetryRequestDao = new HttpRetryRequestDao(httpRetryRequestDaoConfig, this);
        httpRetryPostParamDao = new HttpRetryPostParamDao(httpRetryPostParamDaoConfig, this);
        httpRetryGetParamDao = new HttpRetryGetParamDao(httpRetryGetParamDaoConfig, this);
        appCacheDao = new AppCacheDao(appCacheDaoConfig, this);

        registerDao(HttpRetryRequest.class, httpRetryRequestDao);
        registerDao(HttpRetryPostParam.class, httpRetryPostParamDao);
        registerDao(HttpRetryGetParam.class, httpRetryGetParamDao);
        registerDao(AppCache.class, appCacheDao);
    }
    
    public void clear() {
        httpRetryRequestDaoConfig.getIdentityScope().clear();
        httpRetryPostParamDaoConfig.getIdentityScope().clear();
        httpRetryGetParamDaoConfig.getIdentityScope().clear();
        appCacheDaoConfig.getIdentityScope().clear();
    }

    public HttpRetryRequestDao getHttpRetryRequestDao() {
        return httpRetryRequestDao;
    }

    public HttpRetryPostParamDao getHttpRetryPostParamDao() {
        return httpRetryPostParamDao;
    }

    public HttpRetryGetParamDao getHttpRetryGetParamDao() {
        return httpRetryGetParamDao;
    }

    public AppCacheDao getAppCacheDao() {
        return appCacheDao;
    }

}
